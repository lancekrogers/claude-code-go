name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.21", "1.22", "1.23"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Download dependencies
        run: |
          go mod download
          go mod verify

      - name: Run tests
        run: |
          go test -v -race -coverprofile=coverage.out ./pkg/...

      - name: Upload coverage to Codecov
        if: matrix.go-version == '1.23'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Build library
        run: |
          go build ./pkg/claude

      - name: Build examples
        run: |
          mkdir -p bin
          go build -o bin/basic-example ./examples/basic
          go build -o bin/advanced-example ./examples/advanced
          go build -o bin/testing-example ./examples/testing

      - name: Build demos
        run: |
          cd examples/demo/basic && go mod tidy && go build -o ../../../bin/demo-basic ./cmd/demo
          cd ../streaming && go mod tidy && go build -o ../../../bin/demo-streaming ./cmd/demo

      - name: Build dangerous example
        run: |
          cd examples/dangerous_usage && go mod tidy && go build -o ../../bin/dangerous-example .

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Gosec Security Scanner
        uses: securecodewarrior/github-action-gosec@master
        with:
          args: "./..."

  validate:
    name: Validate Project Structure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Validate Go modules
        run: |
          go mod tidy
          git diff --exit-code go.mod go.sum

      - name: Check gofmt
        run: |
          gofmt -l . | grep -v vendor/ | tee /tmp/gofmt.out
          test ! -s /tmp/gofmt.out

      - name: Run go vet
        run: go vet ./...

      - name: Check for sensitive files
        run: |
          # Check for common sensitive patterns
          if find . -name "*.key" -o -name "*.pem" -o -name ".env" | grep -v vendor/ | head -1; then
            echo "❌ Potential sensitive files found"
            exit 1
          fi
          echo "✅ No sensitive files detected"

